// <auto-generated />
using System;
using CRM_Bunny.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRM_Bunny.Migrations
{
    [DbContext(typeof(CrmContext))]
    [Migration("20200121115345_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("CRM_Bunny.Core.Customer", b =>
                {
                    b.Property<int?>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AllSalePrice")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateOfBirdh")
                        .HasColumnType("TEXT");

                    b.Property<int>("Discount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GlassesOfShares")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfDrunkGlasses")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TelefonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalVisits")
                        .HasColumnType("INTEGER");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CRM_Bunny.Core.KartSale", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KartName")
                        .HasColumnType("TEXT");

                    b.Property<long>("KartNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameCustomer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("KartSales");
                });

            modelBuilder.Entity("CRM_Bunny.Core.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRM_Bunny.Core.VisitCustomers", b =>
                {
                    b.Property<int?>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateVisit")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameCustomer")
                        .HasColumnType("TEXT");

                    b.Property<int>("VisitNumberOfDrunkGlasses")
                        .HasColumnType("INTEGER");

                    b.Property<double>("VisitSalePrice")
                        .HasColumnType("REAL");

                    b.HasKey("VisitId");

                    b.HasIndex("CustomerId");

                    b.ToTable("VisitCustomers");
                });

            modelBuilder.Entity("CRM_Bunny.Core.KartSale", b =>
                {
                    b.HasOne("CRM_Bunny.Core.Customer", "Customer")
                        .WithMany("KartSales")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("CRM_Bunny.Core.VisitCustomers", b =>
                {
                    b.HasOne("CRM_Bunny.Core.Customer", "Customer")
                        .WithMany("Visits")
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
